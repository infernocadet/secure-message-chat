<!-- 
Sign up page, pretty much the same as login.
-->

<!-- SHA256 hashing library -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/js-sha256/0.9.0/sha256.min.js"></script> 


{% extends 'base.jinja' %}


{% block content %} 
    <h1>Sign Up</h1>
    <p>Username</p>
    <input id="username"/>
    <p>Password</p>
    <div style="position: relative;">
        <input id="password" type="password" style="padding-right: 30px;"/>
        <button id="togglePassword" style="position: relative; right: 0; top: 0;" onclick="togglePasswordVisibility()">üëÅÔ∏è</button>
    </div>
    <p id="passwordHelp" style="color: red;"></p>
    <button id="signupButton" onclick="signup()" disabled>Sign up</button>

    <script>
        document.getElementById("password").addEventListener('input', function(event) {
            const password = event.target.value;
            passwordValid = validatePassword(password);
            document.getElementById('passwordHelp').textContent = passwordValid ? '' : 'Password must be at least 8 characters long, include uppercase, lowercase, numbers, and special characters.';
            document.getElementById('signupButton').disabled = !passwordValid;
        });

        function validatePassword(password){
            const hasUpperCase = /[A-Z]/.test(password);
            const hasLowerCase = /[a-z]/.test(password);
            const hasNumbers = /\d/.test(password);
            const hasSpecialChars = /[!@#$%^&*(),.?":{}|<>]/.test(password);
            const isLongEnough = password.length >= 8;
            const notTooLong = password.length <= 20;

            return hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChars && isLongEnough && notTooLong;
        }

        function togglePasswordVisibility(){
            const passwordInput = document.getElementById('password');
            const toggleButton = document.getElementById('togglePassword');
            const isPasswordVisible = passwordInput.type === 'text';
            passwordInput.type = isPasswordVisible ? 'password' : 'text';
            toggleButton.textContent = isPasswordVisible ? 'üëÅÔ∏è' : 'üö´';
        }

        function isValidURL(string) {
            if (string.length == 0) {
                return false;
            }
            if (string[0] == "/") {
                return true;
            }
            return false;
        }

        // generate salt for password hashing since js-sha256 doesn't have salting implemented
        function genSalt(length) {
            var saltString = "";
            var characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            var charactersLength = characters.length;
            for (var i = 0; i < length; i++) {
                saltString += characters.charAt(Math.floor(Math.random() * charactersLength));
            }
            return saltString;
        }

        // this function is identical to login(), see login.jinja
        async function signup() {
            let signupButton = document.getElementById('signupButton');
            signupButton.disabled = true; // disables button, prevents multiple submissions
            let loginURL = "{{ url_for('signup_user') }}";
            let username = $("#username").val();
            let password = $("#password").val();
            let salt = genSalt(10); // Used to generate salt for password hashing
            let passwordHashed = sha256(salt + password); // Hashes password with salt

            let res = await axios.post(loginURL, {
                username: username,
                password: passwordHashed,
                salt: salt
            });
            if (!isValidURL(res.data)) {
                alert(res.data);
                signupButton.disabled = false; // re-enable button is signup fails
                return;
            }
            window.open(res.data, "_self");
        }
    </script>
{% endblock %}
